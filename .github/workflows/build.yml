name: Build UE5 Project

on:
  # (1) mainブランチにpushされた時に実行する
  push:
    branches: ["main"]

  # (2) GitHubの画面から手動で実行できるようにする
  #セルフホストランナーは "C:\actions-runner\_work" で動く
  workflow_dispatch:

jobs:
  build-windows:
    # あなたのPC（セルフホストランナー）で実行する
    runs-on: self-hosted

    steps:
      # ステップ1: コードをダウンロードする (LFSファイルも含む)
      - name: Checkout repository #リポジトリ名のフォルダをセルフホストランナーが作業用フォルダに作成
        uses: actions/checkout@v4 #GitHubからpushしたすべてをダウンロード
        with:
          lfs: true

      # ステップ2: UATコマンドでゲームをパッケージ化する
      - name: Build and Package
        shell: pwsh # PowerShellで実行
        run: |
          Write-Host "Starting UE5 Build..."

          # --- ★ あなたのPC環境に合わせてパスを編集してください ★ ---

          # 1. UE5.4のインストールパス
          $UE_ROOT = "C:\Program Files\Epic Games\UE_5.4"

          # 2. プロジェクトの.uprojectファイル
          # ($env:GITHUB_WORKSPACE は、CIがコードをダウンロードした場所を指します)
          # $env:GITHUB_WORKSPACE=C:\actions-runner\_work\ReibaFight\ReibaiFight
          $PROJECT_PATH = "$env:GITHUB_WORKSPACE\ReibaiFight.uproject" 

          # 3. ビルド成果物の出力先
          $ARCHIVE_DIR = "$env:GITHUB_WORKSPACE\Builds\Windows"

          # --- ここから下は編集不要 ---

          & "$UE_ROOT\Engine\Build\BatchFiles\RunUAT.bat" BuildCookRun -project=$PROJECT_PATH -archive -archivedirectory=$ARCHIVE_DIR -platform=Win64 -clientconfig=Shipping -cook -stage -pak -prereqs

          Write-Host "Build Finished."

      # ステップ3: (オプション) 完成したビルドをzipで保存する
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Windows-Build
          path: Builds\Windows # ステップ2の出力先と同じ
